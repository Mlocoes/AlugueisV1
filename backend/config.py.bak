"""
Configuração da aplicação FastAPI - Sistema de Gestão de Aluguéis V2
"""
import os
from dotenv import load_dotenv
load_dotenv()
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

# Configuração do banco de dados
DATABASE_URL = os.getenv("DATABASE_URL")

# SQLAlchemy setup
engine = create_engine(DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()

# Dependency para obter sessão do banco
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# Configuração da aplicação FastAPI
APP_CONFIG = {
    "title": "Sistema de Gestão de Aluguéis V2",
    "description": "API para gestão de aluguéis, proprietários e imóveis - Versão 2",
    "version": "2.0.0",
    "docs_url": "/docs",
    "redoc_url": "/redoc"
}

# Configuração CORS
CORS_CONFIG = {
    "allow_origins": ["*"],  # Permitir todas las IPs para acceso de red
    "allow_credentials": True,
    "allow_methods": ["*"],
    "allow_headers": ["*"]
}

# Configurações de ambiente
SECRET_KEY = os.getenv("SECRET_KEY", "alquileresv2_secret_key_development")
DEBUG = os.getenv("DEBUG", "true").lower() == "true"

# Configurações de upload
UPLOAD_DIR = "/app/uploads"
STORAGE_DIR = "/app/storage"

# Criar diretórios se não existirem
os.makedirs(UPLOAD_DIR, exist_ok=True)
os.makedirs(STORAGE_DIR, exist_ok=True)
