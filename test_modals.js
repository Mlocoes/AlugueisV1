// Script de teste para verificar os modales na p√°gina de Importar
// Execute este c√≥digo no console do navegador na p√°gina de importar

console.log('üß™ Testando modales de Novo Propriet√°rio e Novo Im√≥vel...');

// Fun√ß√£o para testar se um modal existe e pode ser aberto
function testModal(modalId, buttonId, description) {
    console.log(`\nüìã Testando ${description}:`);
    
    // 1. Verificar se o bot√£o existe
    const button = document.getElementById(buttonId);
    if (!button) {
        console.error(`‚ùå Bot√£o ${buttonId} n√£o encontrado`);
        return false;
    }
    console.log(`‚úÖ Bot√£o ${buttonId} encontrado`);
    
    // 2. Verificar se o modal existe
    const modal = document.getElementById(modalId);
    if (!modal) {
        console.error(`‚ùå Modal ${modalId} n√£o encontrado`);
        return false;
    }
    console.log(`‚úÖ Modal ${modalId} encontrado`);
    
    // 3. Verificar se o bot√£o tem os atributos corretos
    const toggle = button.getAttribute('data-bs-toggle');
    const target = button.getAttribute('data-bs-target');
    if (toggle !== 'modal' || target !== `#${modalId}`) {
        console.error(`‚ùå Bot√£o n√£o tem atributos corretos. Toggle: ${toggle}, Target: ${target}`);
        return false;
    }
    console.log(`‚úÖ Atributos do bot√£o corretos`);
    
    // 4. Verificar se Bootstrap est√° dispon√≠vel
    if (typeof bootstrap === 'undefined') {
        console.error('‚ùå Bootstrap n√£o est√° dispon√≠vel');
        return false;
    }
    console.log(`‚úÖ Bootstrap dispon√≠vel`);
    
    // 5. Testar abertura do modal
    try {
        const bsModal = new bootstrap.Modal(modal);
        bsModal.show();
        console.log(`‚úÖ Modal ${modalId} aberto com sucesso`);
        
        // Fechar ap√≥s 2 segundos
        setTimeout(() => {
            bsModal.hide();
            console.log(`‚úÖ Modal ${modalId} fechado`);
        }, 2000);
        
        return true;
    } catch (error) {
        console.error(`‚ùå Erro ao abrir modal: ${error.message}`);
        return false;
    }
}

// Aguardar um pouco e depois testar
setTimeout(() => {
    console.log('üéØ Iniciando testes dos modais...');
    
    // Verificar se estamos na p√°gina de importar
    const importarContainer = document.querySelector('.importar-container');
    if (!importarContainer) {
        console.error('‚ùå N√£o estamos na p√°gina de importar. Navegue para a se√ß√£o "Importar" primeiro.');
        return;
    }
    
    console.log('‚úÖ Estamos na p√°gina de importar');
    
    // Testar modal de Novo Propriet√°rio
    const test1 = testModal('novo-proprietario-modal', 'btn-novo-proprietario', 'Modal Novo Propriet√°rio');
    
    // Aguardar um pouco entre os testes
    setTimeout(() => {
        // Testar modal de Novo Im√≥vel
        const test2 = testModal('novo-imovel-importar-modal', 'btn-novo-imovel-importar', 'Modal Novo Im√≥vel');
        
        // Resultado final
        setTimeout(() => {
            console.log('\nüèÅ Resultado dos testes:');
            console.log(`Modal Novo Propriet√°rio: ${test1 ? '‚úÖ FUNCIONANDO' : '‚ùå FALHOU'}`);
            console.log(`Modal Novo Im√≥vel: ${test2 ? '‚úÖ FUNCIONANDO' : '‚ùå FALHOU'}`);
            
            if (test1 && test2) {
                console.log('\nüéâ TODOS OS MODAIS EST√ÉO FUNCIONANDO CORRETAMENTE!');
            } else {
                console.log('\n‚ö†Ô∏è Alguns modais n√£o est√£o funcionando. Verifique os erros acima.');
            }
        }, 3000);
    }, 3000);
}, 1000);
